package com.gb.crm.workbench.mapper;

import com.gb.crm.workbench.domain.Activity;
import com.gb.crm.workbench.domain.Contacts;

import java.util.List;
import java.util.Map;

public interface ContactsMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_contacts
     *
     * @mbggenerated Wed Jun 15 11:06:19 CST 2022
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_contacts
     *
     * @mbggenerated Wed Jun 15 11:06:19 CST 2022
     */
    int insert(Contacts record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_contacts
     *
     * @mbggenerated Wed Jun 15 11:06:19 CST 2022
     */
    int insertSelective(Contacts record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_contacts
     *
     * @mbggenerated Wed Jun 15 11:06:19 CST 2022
     */
    Contacts selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_contacts
     *
     * @mbggenerated Wed Jun 15 11:06:19 CST 2022
     */
    int updateByPrimaryKeySelective(Contacts record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_contacts
     *
     * @mbggenerated Wed Jun 15 11:06:19 CST 2022
     */
    int updateByPrimaryKey(Contacts record);

    /**
     * 保存创建的联系人
     * @param contacts
     * @return
     */
    int insertContacts(Contacts contacts);


    /**
     * 根据条件查询线索信息
     * @param map
     * @return
     */
    List<Contacts> selectContactsByConditionForPage(Map<String,Object> map);

    /**
     * 根据条件查询市线索的总条数
     * @param map
     * @return
     */
    int selectCountOfContactsByCondition(Map<String,Object> map);

    /**
     * 根据id删除多条线索
     * @param id
     * @return
     */
    int deleteContactsByIds(String [] id);


    /**
     * 根据name模糊查询联系人，并且查询那些跟客户关联过的联系人
     * @param map
     * @return
     */
    List<Contacts> selectContactsForConvertByNameCustomerId(Map<String,Object> map);

    /**
     * 根据id查询联系人明细信息
     * @param id
     * @return
     */
    Contacts selectContactsDateById(String id);

    /**
     * 查询与客户相关的联系人信息
     * @param customerId
     * @return
     */
    List<Contacts> selectContactsByCustomerId(String customerId);

}
