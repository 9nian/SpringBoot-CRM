package com.gb.crm.workbench.mapper;

import com.gb.crm.workbench.domain.Clue;

import java.util.List;
import java.util.Map;

public interface ClueMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Mon Jun 13 17:31:12 CST 2022
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Mon Jun 13 17:31:12 CST 2022
     */
    int insert(Clue record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Mon Jun 13 17:31:12 CST 2022
     */
    int insertSelective(Clue record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Mon Jun 13 17:31:12 CST 2022
     */
    Clue selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Mon Jun 13 17:31:12 CST 2022
     */
    int updateByPrimaryKeySelective(Clue record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Mon Jun 13 17:31:12 CST 2022
     */
    int updateByPrimaryKey(Clue record);


    /**
     * 保存线索信息
     * @param clue
     * @return
     */
    int insertClue(Clue clue);

    /**
     * 根据条件查询线索信息
     * @param map
     * @return
     */
    List<Clue> selectClueByConditionForPage(Map<String,Object> map);

    /**
     * 根据条件查询市线索的总条数
     * @param map
     * @return
     */
    int selectCountOfClueByCondition(Map<String,Object> map);

    /**
     * 根据id删除多条线索
     * @param id
     * @return
     */
    int deleteClueByIds(String [] id);

    /**
     * 根据id查询线索
     * @param id
     * @return
     */
    Clue selectClueById(String id);


    /**
     * 根据id修改线索数据
     * @param clue
     * @return
     */
    int updateClueById(Clue clue);

    /**
     * 根据id查询线索的明细
     * @param id
     * @return
     */
    Clue selectClueForDetailById(String id);

    /**
     * 根据id查询线索的信息(没有关联信息)
     * @param id
     * @return
     */
    Clue selectClueForConvertById(String id);


    /**
     * 根据id删除线索
     * @param id
     * @return
     */
    int deleteClueById(String id);



}
