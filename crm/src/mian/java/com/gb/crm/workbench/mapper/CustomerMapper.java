package com.gb.crm.workbench.mapper;

import com.gb.crm.workbench.domain.Customer;

import java.util.List;
import java.util.Map;

public interface CustomerMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer
     *
     * @mbggenerated Tue Jun 14 21:47:58 CST 2022
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer
     *
     * @mbggenerated Tue Jun 14 21:47:58 CST 2022
     */
    int insert(Customer record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer
     *
     * @mbggenerated Tue Jun 14 21:47:58 CST 2022
     */
    int insertSelective(Customer record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer
     *
     * @mbggenerated Tue Jun 14 21:47:58 CST 2022
     */
    Customer selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer
     *
     * @mbggenerated Tue Jun 14 21:47:58 CST 2022
     */
    int updateByPrimaryKeySelective(Customer record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer
     *
     * @mbggenerated Tue Jun 14 21:47:58 CST 2022
     */
    int updateByPrimaryKey(Customer record);

    /**
     * 保存客户信息
     * @param customer
     * @return
     */
    int insertCustomer(Customer customer);

    /**
     * 查询所有的客户名称
     * @return
     */
    List<String> selectCustomerNameByName(String name);

    /**
     * 根据name精确查询客户
     * @param name
     * @return
     */
    Customer selectCustomerByName(String name);

    /**
     * 根据条件查询客户信息
     * @param map
     * @return
     */
    List<Customer> selectCustomerByConditionForPage(Map<String,Object> map);

    /**
     * 根据条件查询客户的总条数
     * @param map
     * @return
     */
    int selectCountOfCustomerByCondition(Map<String,Object> map);


    /**
     * 根据id删除多条线索
     * @param id
     * @return
     */
    int deleteCustomerByIds(String [] id);


    /**
     * 根据id查询客户信息
     * @param id
     * @return
     */
    Customer selectCustomerById(String id);

    /**
     * 根据id修改客户信息
     * @param customer
     * @return
     */
    int updateEditCustomer(Customer customer);

    /**
     *  根据id查询客户信息
     * @param id
     * @return
     */
    Customer selectCustomerForDetailById(String id);

}
